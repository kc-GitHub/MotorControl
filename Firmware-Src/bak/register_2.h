#include <AS.h>
//#include "hardware.h"																		// hardware definition

#ifndef _REGISTER_h
	#define _REGISTER_h//- load library's --------------------------------------------------------------------------------------------------------

	//- ----------------------------------------------------------------------------------------------------------------------
	//- eeprom defaults table ------------------------------------------------------------------------------------------------
	uint16_t EEMEM eMagicByte;
	uint8_t  EEMEM eHMID[3]  = {0x01,0x02,0x04};
	uint8_t  EEMEM eHMSR[10] = {'t','l','u','1','0','0','1','2','3','4'};

	// if HMID and Serial are not set, then eeprom ones will be used
	uint8_t HMID[3] = {0x01,0x02,0x04};
	uint8_t HMSR[10] = {'t','l','u','1','0','0','1','2','3','4'}; // tlu1001234

	uint8_t HMKEY[16] = {
//			0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,       // the HM AES Key for your system (key change not available this time)
//			0x09, 0x00, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F
			0xAF, 0x84, 0x8B, 0xB2, 0x6E, 0x11, 0xB8, 0x76,       // the HM AES Key for your system (key change not available this time)
			0xF0, 0x47, 0xCA, 0x03, 0x4A, 0x07, 0x49, 0x5E
	};


	//- stage modules --------------------------------------------------------------------------------------------------------
	AS hm;																						// asksin framework
	Dimmer dimmer;																				// user module

	//- ----------------------------------------------------------------------------------------------------------------------
	//- generated by createRegisterFromFile.pl
	//- ID: 0x0067, File: rf_dim_1pwm_644.xml
	//- ----------------------------------------------------------------------------------------------------------------------

	//- ----------------------------------------------------------------------------------------------------------------------
	//- ----------------------------------------------------------------------------------------------------------------------
	//                                   FW  moID   serial                         ST  devInfo
	// <- 1A 01 A4 00 01 02 05 63 19 63  15  00 6C  74 6C 75 31 30 30 31 32 33 35  10  11 01 00
	// FW   -> Firmware, sometimes given in xml files of hm config software
	// moID -> Model ID, important for identification in hm config software
	// ST   -> Subtype, identifier if device is a switch or a dimmer or a remote
	// devInfo -> Device Info -> sometimes hm config files are refering on byte 23 for the amount of channels, other bytes not known
	//                           23:0 0.4, means first four bit of byte 23 reflecting the amount of channels
	//
	//- settings of HM device for AS class -----------------------------------------------------------------------------------
	const uint8_t devIdnt[] PROGMEM = {
		/* Firmware version 1 byte */  0x25,
		/* Model ID         2 byte */  0x00, 0x67,
		/* Sub Type ID      1 byte */  0x00,
		/* Device Info      3 byte */  0x41, 0x01, 0x00,
	};

	//- ----------------------------------------------------------------------------------------------------------------------
	//- channel slice address definition -------------------------------------------------------------------------------------
	const uint8_t cnlAddr[] PROGMEM = {
		0x02, 0x0a, 0x0b, 0x0c, 0x15, 0x16,
		0x30, 0x32, 0x34, 0x35, 0x56, 0x57, 0x58, 0x59,
		0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x26, 0x27, 0x28, 0x29, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f, 0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0xa6, 0xa7, 0xa8, 0xa9,
	};  // 78 byte

	//- channel device list table --------------------------------------------------------------------------------------------
	EE::s_cnlTbl cnlTbl[] = {
		// cnl, lst, sIdx, sLen, pAddr;
		{  0,  0, 0x00,  6,  0x000f },
		{  1,  1, 0x06,  8,  0x0015 },
		{  1,  3, 0x0e, 60,  0x001d },
		{  2,  1, 0x06,  8,  0x0185 },
		{  2,  3, 0x0e, 60,  0x018d },
		{  3,  1, 0x06,  8,  0x01c9 },
		{  3,  3, 0x0e, 60,  0x01d1 },
	};  // 42 byte

	//- peer device list table -----------------------------------------------------------------------------------------------
	EE::s_peerTbl peerTbl[] = {
		// cnl, pMax, pAddr;
		{  1,  6, 0x020d },
		{  2,  1, 0x0225 },
		{  3,  1, 0x0229 },
	};  // 12 byte

	//- handover to AskSin lib -----------------------------------------------------------------------------------------------
	EE::s_devDef devDef = {
		3, 7, devIdnt, cnlAddr,
	};  // 10 byte

	//- module registrar -----------------------------------------------------------------------------------------------------
	RG::s_modTable modTbl[3];
#endif
